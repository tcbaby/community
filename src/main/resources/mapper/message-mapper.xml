<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tcbaby.community.mapper.MessageMapper">

    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <select id="countConversationByUserId" resultType="int">
        select count(distinct conversation_id) from message
        where from_id!=1 and status!=2
        and (from_id=#{userId} or to_id=#{userId})
    </select>

    <select id="selectConversationsByUserId" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in(
            select max(id) from message
            where status!=2 and from_id!=1 and (to_id=#{userId} or from_id=#{userId})
            group by conversation_id
        )
        order by create_time desc
    </select>

    <select id="countUnreadLetterByUserId" resultType="int">
        select count(*) from message
        where from_id!=1 and status=0 and to_id=#{userId}
    </select>

    <select id="countConversationMessage" resultType="int">
        select count(*) from message
        where status!=2
        <if test="userId != 0">
            and to_id=#{userId}
        </if>
        and conversation_id=#{conversationId}
    </select>

    <select id="countConversationUnreadMessage" resultType="int">
        select count(*) from message
        where status=0 and to_id=#{userId}
        and conversation_id=#{conversationId}
    </select>

    <select id="queryMessageByConversationId" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where status!=2 and conversation_id=#{conversationId}
        order by create_time desc
        limit #{offset},#{size}
    </select>

    <update id="updateMessageStatus">
        update message set status=#{status} where id in
        <foreach collection="messageIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <insert id="saveMessage" parameterType="Message">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
</mapper>